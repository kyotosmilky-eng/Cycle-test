import os
import logging
import sqlite3
from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è)
TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN')

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
def init_db():
    conn = sqlite3.connect('bot_data.db')
    c = conn.cursor()
    c.execute('''CREATE TABLE IF NOT EXISTS witness_state
                 (chat_id INTEGER PRIMARY KEY, title TEXT, members TEXT)''')
    c.execute('''CREATE TABLE IF NOT EXISTS active_cycles
                 (chat_id INTEGER, user_id INTEGER)''')
    c.execute('''CREATE TABLE IF NOT EXISTS user_profiles
                 (user_id INTEGER, username TEXT, first_name TEXT)''')
    conn.commit()
    conn.close()

# ===== –ö–û–ù–¶–ï–ü–¶–ò–Ø 1: –¶–ò–ö–õ –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô =====
def cycle_start(update: Update, context: CallbackContext):
    """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Ü–∏–∫–ª –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    chat_id = update.effective_chat.id
    user = update.effective_user
    
    if update.message.reply_to_message:
        target_user = update.message.reply_to_message.from_user
        user_name = target_user.first_name
    else:
        target_user = user
        user_name = user.first_name

    conn = sqlite3.connect('bot_data.db')
    c = conn.cursor()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å
    c.execute("INSERT OR REPLACE INTO user_profiles VALUES (?, ?, ?)",
              (target_user.id, target_user.username, target_user.first_name))
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ü–∏–∫–ª
    c.execute("INSERT OR IGNORE INTO active_cycles VALUES (?, ?)", 
              (chat_id, target_user.id))
    
    conn.commit()
    conn.close()
    
    update.message.reply_text(
        f"üåÄ –¶–∏–∫–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_name}!\n"
        f"–õ—é–±—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –±—É–¥—É—Ç '–æ—Ç–∫–∞—Ç—ã–≤–∞—Ç—å—Å—è' –≤ –ø–∞–º—è—Ç–∏ –±–æ—Ç–∞."
    )

def cycle_info(update: Update, context: CallbackContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    chat_id = update.effective_chat.id
    user = update.effective_user
    
    conn = sqlite3.connect('bot_data.db')
    c = conn.cursor()
    
    c.execute("SELECT username, first_name FROM user_profiles WHERE user_id = ?", (user.id,))
    result = c.fetchone()
    
    if result:
        original_username, original_name = result
        current_username = f"@{user.username}" if user.username else "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        current_name = user.first_name
        
        message = (
            f"üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ü–∏–∫–ª–µ –¥–ª—è {user.first_name}:\n"
            f"–ò—Å—Ö–æ–¥–Ω–æ–µ –∏–º—è: {original_name}\n"
            f"–¢–µ–∫—É—â–µ–µ –∏–º—è: {current_name}\n"
            f"–ò—Å—Ö–æ–¥–Ω—ã–π username: {original_username}\n"
            f"–¢–µ–∫—É—â–∏–π username: {current_username}\n"
            f"\n–¶–∏–∫–ª –∞–∫—Ç–∏–≤–µ–Ω! –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é—Ç—Å—è."
        )
    else:
        message = "–¶–∏–∫–ª –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –Ω–∞ –≤–∞—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cycle_start"
    
    conn.close()
    update.message.reply_text(message)

# ===== –ö–û–ù–¶–ï–ü–¶–ò–Ø 2: –†–ï–ñ–ò–ú –ü–ê–†–ê–î–û–ö–°–û–í =====
def paradox_start(update: Update, context: CallbackContext):
    """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Ä–µ–∂–∏–º –ø–∞—Ä–∞–¥–æ–∫—Å–æ–≤"""
    update.message.reply_text(
        "üîÑ –†–µ–∂–∏–º –ü–ê–†–ê–î–û–ö–°–û–í –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n"
        "–¢–µ–ø–µ—Ä—å —è –±—É–¥—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –æ–±–µ—â–∞–Ω–∏—è –∏ —É—Å–ª–æ–≤–∏—è –≤ –≤–∞—à–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.\n"
        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å: '–ï—Å–ª–∏ —è –æ—Ç–ø—Ä–∞–≤–ª—é —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç–æ...'"
    )

def track_promises(update: Update, context: CallbackContext):
    """–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –æ–±–µ—â–∞–Ω–∏—è –∏ —É—Å–ª–æ–≤–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö"""
    text = update.message.text.lower()
    
    responses = {
        '–µ—Å–ª–∏': "üåÄ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —É—Å–ª–æ–≤–∏–µ '–µ—Å–ª–∏... —Ç–æ...'. –¶–∏–∫–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ—Ç: –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–µ –±—É–¥–µ—Ç —Å–±—Ä–æ—à–µ–Ω–æ!",
        '–æ–±–µ—â–∞—é': "üåÄ –û–±–µ—â–∞–Ω–∏–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ! –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –ø–∞—Ä–∞–¥–æ–∫—Å—É!",
        '–∫–ª—è–Ω—É—Å—å': "üåÄ –ö–ª—è—Ç–≤–∞ –ø—Ä–∏–Ω—è—Ç–∞! –¶–∏–∫–ª —Å–ª–µ–¥–∏—Ç –∑–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ–º...",
        '–Ω–∏–∫–æ–≥–¥–∞': "üåÄ '–ù–∏–∫–æ–≥–¥–∞' - –æ–ø–∞—Å–Ω–æ–µ —Å–ª–æ–≤–æ! –¶–∏–∫–ª –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —ç—Ç–æ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ!",
        '–≤—Å–µ–≥–¥–∞': "üåÄ '–í—Å–µ–≥–¥–∞' —Å–æ–∑–¥–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–µ—Ç–ª—é! –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã!"
    }
    
    for trigger, response in responses.items():
        if trigger in text:
            update.message.reply_text(response)
            break

# ===== –ö–û–ù–¶–ï–ü–¶–ò–Ø 3: –†–ï–ñ–ò–ú –°–í–ò–î–ï–¢–ï–õ–Ø =====
def witness_start(update: Update, context: CallbackContext):
    """–§–∏–∫—Å–∏—Ä—É–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–∞—Ç–∞"""
    chat = update.effective_chat
    chat_id = chat.id
    
    conn = sqlite3.connect('bot_data.db')
    c = conn.cursor()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞ –∏ —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞)
    c.execute("INSERT OR REPLACE INTO witness_state VALUES (?, ?, ?)",
              (chat_id, chat.title, "–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω"))
    
    conn.commit()
    conn.close()
    
    update.message.reply_text(
        f"üì∏ –°–≤–∏–¥–µ—Ç–µ–ª—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n"
        f"–°–æ—Å—Ç–æ—è–Ω–∏–µ —á–∞—Ç–∞ '{chat.title}' –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –∫–∞–∫ –∏—Å—Ö–æ–¥–Ω–æ–µ.\n"
        f"–õ—é–±—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å—Å—è."
    )

def witness_status(update: Update, context: CallbackContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ"""
    chat_id = update.effective_chat.id
    
    conn = sqlite3.connect('bot_data.db')
    c = conn.cursor()
    
    c.execute("SELECT title, members FROM witness_state WHERE chat_id = ?", (chat_id,))
    result = c.fetchone()
    
    if result:
        original_title, members = result
        current_title = update.effective_chat.title
        
        message = (
            f"üìä –°–≤–∏–¥–µ—Ç–µ–ª—å —Å–æ–æ–±—â–∞–µ—Ç:\n"
            f"–ò—Å—Ö–æ–¥–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {original_title}\n"
            f"–¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {current_title}\n"
            f"–°—Ç–∞—Ç—É—Å: {'–ò–ó–ú–ï–ù–ï–ù–û! üîÑ' if original_title != current_title else '–°–û–•–†–ê–ù–ï–ù–û ‚úÖ'}\n"
            f"{members}"
        )
    else:
        message = "–†–µ–∂–∏–º —Å–≤–∏–¥–µ—Ç–µ–ª—è –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /witness_start"
    
    conn.close()
    update.message.reply_text(message)

# ===== –û–°–ù–û–í–ù–´–ï –ö–û–ú–ê–ù–î–´ =====
def start(update: Update, context: CallbackContext):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    help_text = """
üåÄ *–ë–û–¢ –¶–ò–ö–õ* –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! üåÄ

*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*

*üîÑ –¶–ò–ö–õ (–ö–æ–Ω—Ü–µ–ø—Ü–∏—è 1)*
/cycle_start - –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ü–∏–∫–ª –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)
/cycle_info - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à–µ "–∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ"

*üé≠ –ü–ê–†–ê–î–û–ö–° (–ö–æ–Ω—Ü–µ–ø—Ü–∏—è 2)*
/paradox_start - –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∂–∏–º –ø–∞—Ä–∞–¥–æ–∫—Å–æ–≤
(–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å–ª–æ–≤–∞–º–∏: '–µ—Å–ª–∏', '–æ–±–µ—â–∞—é', '–∫–ª—è–Ω—É—Å—å')

*üì∏ –°–í–ò–î–ï–¢–ï–õ–¨ (–ö–æ–Ω—Ü–µ–ø—Ü–∏—è 3)*
/witness_start - –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–∞—Ç–∞
/witness_status - –ü–æ–∫–∞–∑–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è

*–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:*
1. –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —á—å–µ-—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ /cycle_start
2. –ù–∞–ø–∏—à–∏—Ç–µ "–Ø –æ–±–µ—â–∞—é –±–æ–ª—å—à–µ –Ω–µ —Å–ø–∞–º–∏—Ç—å"
3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /witness_start —á—Ç–æ–±—ã –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å —á–∞—Ç
4. –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å —Ä–µ–∞–∫—Ü–∏–µ–π –±–æ—Ç–∞! üòÑ

_–ë–æ—Ç —Å–æ–∑–¥–∞–Ω –ø–æ –º–æ—Ç–∏–≤–∞–º —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∏–∑ —Ñ—ç–Ω—Ç–µ–∑–∏ –∫–Ω–∏–≥–∏_
    """
    update.message.reply_text(help_text, parse_mode='Markdown')

def error_handler(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(msg="Exception while handling an update:", exc_info=context.error)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    init_db()
    
    updater = Updater(TOKEN)
    dp = updater.dispatcher
    
    # –ö–æ–º–∞–Ω–¥—ã
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("cycle_start", cycle_start))
    dp.add_handler(CommandHandler("cycle_info", cycle_info))
    dp.add_handler(CommandHandler("paradox_start", paradox_start))
    dp.add_handler(CommandHandler("witness_start", witness_start))
    dp.add_handler(CommandHandler("witness_status", witness_status))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, track_promises))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    dp.add_error_handler(error_handler)
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
